!function(I){function g(n){if(C[n])return C[n].exports;var e=C[n]={exports:{},id:n,loaded:!1};return I[n].call(e.exports,e,e.exports,g),e.loaded=!0,e.exports}var C={};return g.m=I,g.c=C,g.p="",g(0)}([function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(2);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _app = __webpack_require__(3);\n\n__webpack_require__(8);\n\n__webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_reactDom2.default.render(_react2.default.createElement(_app.SimpleDisplayApp, null), document.getElementById('career'));\n\n_reactDom2.default.render(_react2.default.createElement(_app.HierarchyDisplayApp, null), document.getElementById('city'));\n\n_reactDom2.default.render(_react2.default.createElement(_app.AsyncLoadApp, null), document.getElementById('region'));//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvaW5kZXguanM/ZGFkYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUE7Ozs7QUFFQTs7QUFFQTs7QUFFQTs7OztBQUVBLG1CQUFTLE1BQVQsQ0FDSSwwREFESixFQUVJLFNBQVMsY0FBVCxDQUF3QixRQUF4QixDQUZKOztBQUtBLG1CQUFTLE1BQVQsQ0FDSSw2REFESixFQUVJLFNBQVMsY0FBVCxDQUF3QixNQUF4QixDQUZKOztBQUtBLG1CQUFTLE1BQVQsQ0FDSSxzREFESixFQUVJLFNBQVMsY0FBVCxDQUF3QixRQUF4QixDQUZKIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXG5cbmltcG9ydCB7IFNpbXBsZURpc3BsYXlBcHAsIEhpZXJhcmNoeURpc3BsYXlBcHAsIEFzeW5jTG9hZEFwcCB9IGZyb20gJy4vYXBwJ1xuXG5pbXBvcnQgJy4vY3NzL21haW4uc2NzcydcblxuaW1wb3J0ICcuL2Nzcy9tdWx0aXBsZS1zZWxlY3QtYm94LnNjc3MnXG5cblJlYWN0RE9NLnJlbmRlcihcbiAgICA8U2ltcGxlRGlzcGxheUFwcCAvPixcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FyZWVyJylcbilcblxuUmVhY3RET00ucmVuZGVyKFxuICAgIDxIaWVyYXJjaHlEaXNwbGF5QXBwIC8+LFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaXR5JylcbilcblxuUmVhY3RET00ucmVuZGVyKFxuICAgIDxBc3luY0xvYWRBcHAgLz4sXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlZ2lvbicpXG4pXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL2FwcC9pbmRleC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval("module.exports = React;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdFwiPzlkZTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gUmVhY3Q7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcIlJlYWN0XCJcbiAqKiBtb2R1bGUgaWQgPSAxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("module.exports = ReactDOM;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdERPTVwiPzRhYjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gUmVhY3RET007XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcIlJlYWN0RE9NXCJcbiAqKiBtb2R1bGUgaWQgPSAyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.AsyncLoadApp = exports.HierarchyDisplayApp = exports.SimpleDisplayApp = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\n__webpack_require__(4);\n\nvar _reactMultipleSelectBox = __webpack_require__(5);\n\nvar _reactMultipleSelectBox2 = _interopRequireDefault(_reactMultipleSelectBox);\n\nvar _configs = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SimpleDisplayApp = exports.SimpleDisplayApp = function (_Component) {\n    _inherits(SimpleDisplayApp, _Component);\n\n    function SimpleDisplayApp(props, context) {\n        _classCallCheck(this, SimpleDisplayApp);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SimpleDisplayApp).call(this, props, context));\n\n        _this.state = {\n            options: _configs.career,\n            value: []\n        };\n        return _this;\n    }\n\n    _createClass(SimpleDisplayApp, [{\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement(\n                'div',\n                { className: 'container' },\n                _react2.default.createElement(_reactMultipleSelectBox2.default, {\n                    options: this.state.options,\n                    value: this.state.value,\n                    selectedLabel: 'selected ',\n                    nameText: 'career'\n                })\n            );\n        }\n    }]);\n\n    return SimpleDisplayApp;\n}(_react.Component);\n\n;\n\nvar HierarchyDisplayApp = exports.HierarchyDisplayApp = function (_Component2) {\n    _inherits(HierarchyDisplayApp, _Component2);\n\n    function HierarchyDisplayApp(props, context) {\n        _classCallCheck(this, HierarchyDisplayApp);\n\n        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(HierarchyDisplayApp).call(this, props, context));\n\n        _this2.state = {\n            options: _configs.city,\n            value: []\n        };\n        return _this2;\n    }\n\n    _createClass(HierarchyDisplayApp, [{\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement(\n                'div',\n                { className: 'container' },\n                _react2.default.createElement(_reactMultipleSelectBox2.default, {\n                    options: this.state.options,\n                    value: this.state.value,\n                    selectedLabel: 'selected ',\n                    nameText: 'city'\n                })\n            );\n        }\n    }]);\n\n    return HierarchyDisplayApp;\n}(_react.Component);\n\n;\n\nvar AsyncLoadApp = exports.AsyncLoadApp = function (_Component3) {\n    _inherits(AsyncLoadApp, _Component3);\n\n    function AsyncLoadApp(props, context) {\n        _classCallCheck(this, AsyncLoadApp);\n\n        var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(AsyncLoadApp).call(this, props, context));\n\n        _this3.state = {\n            options: _configs.region,\n            value: [{ id: 41, text: '西湖' }]\n        };\n        return _this3;\n    }\n\n    _createClass(AsyncLoadApp, [{\n        key: 'asyncFetch',\n        value: function asyncFetch(id) {\n            return fetch('mocks/region.json?id=' + id).then(function (res) {\n                // res instanceof Response == true.\n                return res.json().then(function (data) {\n                    return data.data;\n                });\n            }, function (e) {\n                console.log(\"Fetch failed!\", e);\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement(\n                'div',\n                { className: 'container' },\n                _react2.default.createElement(_reactMultipleSelectBox2.default, {\n                    options: this.state.options,\n                    value: this.state.value,\n                    selectedLabel: 'selected ',\n                    nameText: 'region',\n                    async: true,\n                    asyncFetch: this.asyncFetch.bind(this)\n                })\n            );\n        }\n    }]);\n\n    return AsyncLoadApp;\n}(_react.Component);\n\n;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYXBwLmpzPzg2YTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQTs7QUFFQTs7OztBQUVBOzs7Ozs7Ozs7O0lBRWEsZ0IsV0FBQSxnQjs7O0FBRVQsOEJBQVksS0FBWixFQUFtQixPQUFuQixFQUE0QjtBQUFBOztBQUFBLHdHQUNsQixLQURrQixFQUNYLE9BRFc7O0FBRXhCLGNBQUssS0FBTCxHQUFhO0FBQ1Qsb0NBRFM7QUFFVCxtQkFBTztBQUZFLFNBQWI7QUFGd0I7QUFNM0I7Ozs7aUNBRVE7QUFDTCxtQkFDSTtBQUFBO2dCQUFBLEVBQUssV0FBVSxXQUFmO2dCQUNJO0FBQ0ksNkJBQVMsS0FBSyxLQUFMLENBQVcsT0FEeEI7QUFFSSwyQkFBTyxLQUFLLEtBQUwsQ0FBVyxLQUZ0QjtBQUdJLG1DQUFjLFdBSGxCO0FBSUksOEJBQVM7QUFKYjtBQURKLGFBREo7QUFVSDs7Ozs7O0FBQ0o7O0lBRVksbUIsV0FBQSxtQjs7O0FBRVQsaUNBQVksS0FBWixFQUFtQixPQUFuQixFQUE0QjtBQUFBOztBQUFBLDRHQUNsQixLQURrQixFQUNYLE9BRFc7O0FBRXhCLGVBQUssS0FBTCxHQUFhO0FBQ1Qsa0NBRFM7QUFFVCxtQkFBTztBQUZFLFNBQWI7QUFGd0I7QUFNM0I7Ozs7aUNBRVE7QUFDTCxtQkFDSTtBQUFBO2dCQUFBLEVBQUssV0FBVSxXQUFmO2dCQUNJO0FBQ0ksNkJBQVMsS0FBSyxLQUFMLENBQVcsT0FEeEI7QUFFSSwyQkFBTyxLQUFLLEtBQUwsQ0FBVyxLQUZ0QjtBQUdJLG1DQUFjLFdBSGxCO0FBSUksOEJBQVM7QUFKYjtBQURKLGFBREo7QUFVSDs7Ozs7O0FBQ0o7O0lBR1ksWSxXQUFBLFk7OztBQUVULDBCQUFZLEtBQVosRUFBbUIsT0FBbkIsRUFBNEI7QUFBQTs7QUFBQSxxR0FDbEIsS0FEa0IsRUFDWCxPQURXOztBQUV4QixlQUFLLEtBQUwsR0FBYztBQUNWLG9DQURVO0FBRVYsbUJBQU8sQ0FBQyxFQUFDLElBQUksRUFBTCxFQUFTLE1BQU0sSUFBZixFQUFEO0FBRkcsU0FBZDtBQUZ3QjtBQU0zQjs7OzttQ0FFVSxFLEVBQUk7QUFDWCxtQkFBTyxNQUFNLDBCQUEwQixFQUFoQyxFQUFvQyxJQUFwQyxDQUF5QyxlQUFPOztBQUVuRCx1QkFBTyxJQUFJLElBQUosR0FBVyxJQUFYLENBQWdCO0FBQUEsMkJBQVEsS0FBSyxJQUFiO0FBQUEsaUJBQWhCLENBQVA7QUFDSCxhQUhNLEVBR0osYUFBSztBQUNKLHdCQUFRLEdBQVIsQ0FBWSxlQUFaLEVBQTZCLENBQTdCO0FBQ0gsYUFMTSxDQUFQO0FBT0g7OztpQ0FFUTtBQUNMLG1CQUNJO0FBQUE7Z0JBQUEsRUFBSyxXQUFVLFdBQWY7Z0JBQ0k7QUFDSSw2QkFBUyxLQUFLLEtBQUwsQ0FBVyxPQUR4QjtBQUVJLDJCQUFPLEtBQUssS0FBTCxDQUFXLEtBRnRCO0FBR0ksbUNBQWMsV0FIbEI7QUFJSSw4QkFBUyxRQUpiO0FBS0ksMkJBQU8sSUFMWDtBQU1JLGdDQUFjLEtBQUssVUFBbkIsTUFBYyxJQUFkO0FBTko7QUFESixhQURKO0FBWUg7Ozs7OztBQUNKIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgJ3doYXR3Zy1mZXRjaCc7XG5cbmltcG9ydCBNdWx0aXBsZVNlbGVjdEJveCBmcm9tICdyZWFjdC1tdWx0aXBsZS1zZWxlY3QtYm94JztcblxuaW1wb3J0IHsgY2FyZWVyLCBjaXR5LCByZWdpb24gfSBmcm9tICcuL2NvbmZpZ3MnO1xuXG5leHBvcnQgY2xhc3MgU2ltcGxlRGlzcGxheUFwcCBleHRlbmRzIENvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcywgY29udGV4dCkge1xuICAgICAgICBzdXBlcihwcm9wcywgY29udGV4dCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBvcHRpb25zOiBjYXJlZXIsXG4gICAgICAgICAgICB2YWx1ZTogW11cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxNdWx0aXBsZVNlbGVjdEJveFxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zPXt0aGlzLnN0YXRlLm9wdGlvbnN9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnZhbHVlfVxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZExhYmVsPVwic2VsZWN0ZWQgXCJcbiAgICAgICAgICAgICAgICAgICAgbmFtZVRleHQ9XCJjYXJlZXJcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn07XG5cbmV4cG9ydCBjbGFzcyBIaWVyYXJjaHlEaXNwbGF5QXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKHByb3BzLCBjb250ZXh0KTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIG9wdGlvbnM6IGNpdHksXG4gICAgICAgICAgICB2YWx1ZTogW11cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxNdWx0aXBsZVNlbGVjdEJveFxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zPXt0aGlzLnN0YXRlLm9wdGlvbnN9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnZhbHVlfVxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZExhYmVsPVwic2VsZWN0ZWQgXCJcbiAgICAgICAgICAgICAgICAgICAgbmFtZVRleHQ9XCJjaXR5XCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59O1xuXG5cbmV4cG9ydCBjbGFzcyBBc3luY0xvYWRBcHAgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMsIGNvbnRleHQpIHtcbiAgICAgICAgc3VwZXIocHJvcHMsIGNvbnRleHQpO1xuICAgICAgICB0aGlzLnN0YXRlID0gKHtcbiAgICAgICAgICAgIG9wdGlvbnM6IHJlZ2lvbixcbiAgICAgICAgICAgIHZhbHVlOiBbe2lkOiA0MSwgdGV4dDogJ+ilv+a5lid9XVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBhc3luY0ZldGNoKGlkKSB7XG4gICAgICAgIHJldHVybiBmZXRjaCgnbW9ja3MvcmVnaW9uLmpzb24/aWQ9JyArIGlkKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAvLyByZXMgaW5zdGFuY2VvZiBSZXNwb25zZSA9PSB0cnVlLlxuICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCkudGhlbihkYXRhID0+IGRhdGEuZGF0YSk7XG4gICAgICAgIH0sIGUgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJGZXRjaCBmYWlsZWQhXCIsIGUpO1xuICAgICAgICB9KTtcblxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPE11bHRpcGxlU2VsZWN0Qm94XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM9e3RoaXMuc3RhdGUub3B0aW9uc31cbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUudmFsdWV9XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkTGFiZWw9XCJzZWxlY3RlZCBcIlxuICAgICAgICAgICAgICAgICAgICBuYW1lVGV4dD1cInJlZ2lvblwiXG4gICAgICAgICAgICAgICAgICAgIGFzeW5jPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICBhc3luY0ZldGNoPXs6OnRoaXMuYXN5bmNGZXRjaH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59O1xuXG5cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2FwcC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval("(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n//# sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("'use strict';\n\nmodule.exports = __webpack_require__(6);//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LW11bHRpcGxlLXNlbGVjdC1ib3gvaW5kZXguanM/NTY4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9yZWFjdC1tdWx0aXBsZS1zZWxlY3QtYm94Jyk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcmVhY3QtbXVsdGlwbGUtc2VsZWN0LWJveC9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("(function webpackUniversalModuleDefinition(root, factory) {\n	if(true)\n		module.exports = factory(__webpack_require__(1));\n	else if(typeof define === 'function' && define.amd)\n		define([\"react\"], factory);\n	else {\n		var a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n	}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ 	// The module cache\n/******/ 	var installedModules = {};\n/******/\n/******/ 	// The require function\n/******/ 	function __webpack_require__(moduleId) {\n/******/\n/******/ 		// Check if module is in cache\n/******/ 		if(installedModules[moduleId])\n/******/ 			return installedModules[moduleId].exports;\n/******/\n/******/ 		// Create a new module (and put it into the cache)\n/******/ 		var module = installedModules[moduleId] = {\n/******/ 			exports: {},\n/******/ 			id: moduleId,\n/******/ 			loaded: false\n/******/ 		};\n/******/\n/******/ 		// Execute the module function\n/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ 		// Flag the module as loaded\n/******/ 		module.loaded = true;\n/******/\n/******/ 		// Return the exports of the module\n/******/ 		return module.exports;\n/******/ 	}\n/******/\n/******/\n/******/ 	// expose the modules object (__webpack_modules__)\n/******/ 	__webpack_require__.m = modules;\n/******/\n/******/ 	// expose the module cache\n/******/ 	__webpack_require__.c = installedModules;\n/******/\n/******/ 	// __webpack_public_path__\n/******/ 	__webpack_require__.p = \"\";\n/******/\n/******/ 	// Load entry module and return exports\n/******/ 	return __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n	'use strict';\n	\n	Object.defineProperty(exports, \"__esModule\", {\n	    value: true\n	});\n	\n	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n	\n	var _react = __webpack_require__(1);\n	\n	var _react2 = _interopRequireDefault(_react);\n	\n	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n	\n	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n	\n	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n	\n	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n	\n	function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n	\n	var idInc = 0;\n	\n	var interceptEvent = function interceptEvent(event) {\n	    if (event) {\n	        event.preventDefault();\n	        event.stopPropagation();\n	    }\n	};\n	\n	var toggleClass = function toggleClass() {\n	    var fullClassName = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n	    var className = arguments[1];\n	\n	    return fullClassName.includes(className) ? fullClassName.replace(className, '') : fullClassName.trim() + ' ' + className;\n	};\n	\n	var removeClass = function removeClass() {\n	    var fullClassName = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n	    var className = arguments[1];\n	\n	    return fullClassName.replace(className, '');\n	};\n	\n	var addClass = function addClass() {\n	    var fullClassName = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n	    var className = arguments[1];\n	\n	    return fullClassName.trim() + ' ' + className;\n	};\n	\n	var MultipleSelectBox = function (_Component) {\n	    _inherits(MultipleSelectBox, _Component);\n	\n	    function MultipleSelectBox(props, context) {\n	        _classCallCheck(this, MultipleSelectBox);\n	\n	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MultipleSelectBox).call(this, props, context));\n	\n	        _this.clickingOption = false;\n	        _this.blurTimeout = null;\n	        _this.state = {\n	            id: 'react-multi-select-box-' + ++idInc,\n	            open: false,\n	            focusedIndex: -1,\n	            pendingValue: _this.props.value,\n	            value: _this.props.value,\n	            options: _this.props.options\n	        };\n	        return _this;\n	    }\n	\n	    _createClass(MultipleSelectBox, [{\n	        key: 'componentWillMount',\n	        value: function componentWillMount() {\n	            var _this2 = this;\n	\n	            if (this.state.options.length === 0 && this.props.async && typeof this.props.asyncFetch == 'function') {\n	                this.props.asyncFetch(-1).then(function (data) {\n	                    _this2.setState({\n	                        options: data\n	                    });\n	                });\n	            }\n	        }\n	    }, {\n	        key: 'componentWillReceiveProps',\n	        value: function componentWillReceiveProps(nextProps) {\n	            this.setState({\n	                pendingValue: nextProps.value,\n	                value: nextProps.value\n	            });\n	        }\n	    }, {\n	        key: 'label',\n	        value: function label() {\n	            var selected = this.state.value.map(function (option) {\n	                return option.text;\n	            });\n	            return selected.length > 0 ? selected.join(', ') : this.props.label;\n	        }\n	    }, {\n	        key: 'value',\n	        value: function value() {\n	            return this.state.value;\n	        }\n	    }, {\n	        key: 'hasValue',\n	        value: function hasValue() {\n	            return this.value().length > 0;\n	        }\n	    }, {\n	        key: 'handleConfirm',\n	        value: function handleConfirm() {\n	            var _this3 = this;\n	\n	            var value = this.state.pendingValue;\n	            this.setState({\n	                open: false,\n	                value: value\n	            }, function () {\n	                _this3.props.onConfirmCallback(_this3.state.value);\n	            });\n	        }\n	    }, {\n	        key: 'handleCancel',\n	        value: function handleCancel() {\n	            var _this4 = this;\n	\n	            var pendingValue = this.state.value;\n	            this.setState({\n	                open: false,\n	                pendingValue: pendingValue\n	            }, function () {\n	                _this4.props.onCancelCallback();\n	            });\n	        }\n	    }, {\n	        key: 'isInclude',\n	        value: function isInclude(value, id) {\n	            var isIn = false;\n	            var _iteratorNormalCompletion = true;\n	            var _didIteratorError = false;\n	            var _iteratorError = undefined;\n	\n	            try {\n	                for (var _iterator = value[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n	                    var o = _step.value;\n	\n	                    if (id == o.id) {\n	                        isIn = true;\n	                        break;\n	                    }\n	                }\n	            } catch (err) {\n	                _didIteratorError = true;\n	                _iteratorError = err;\n	            } finally {\n	                try {\n	                    if (!_iteratorNormalCompletion && _iterator.return) {\n	                        _iterator.return();\n	                    }\n	                } finally {\n	                    if (_didIteratorError) {\n	                        throw _iteratorError;\n	                    }\n	                }\n	            }\n	\n	            return isIn;\n	        }\n	    }, {\n	        key: 'getPendingValueIndex',\n	        value: function getPendingValueIndex(id) {\n	            var key = 0,\n	                index = -1,\n	                pendingValue = this.state.pendingValue;\n	            var _iteratorNormalCompletion2 = true;\n	            var _didIteratorError2 = false;\n	            var _iteratorError2 = undefined;\n	\n	            try {\n	                for (var _iterator2 = pendingValue[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n	                    var o = _step2.value;\n	\n	                    if (id == o.id) {\n	                        index = key;\n	                        break;\n	                    } else {\n	                        key++;\n	                    }\n	                }\n	            } catch (err) {\n	                _didIteratorError2 = true;\n	                _iteratorError2 = err;\n	            } finally {\n	                try {\n	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n	                        _iterator2.return();\n	                    }\n	                } finally {\n	                    if (_didIteratorError2) {\n	                        throw _iteratorError2;\n	                    }\n	                }\n	            }\n	\n	            return index;\n	        }\n	    }, {\n	        key: 'toggleOpenClose',\n	        value: function toggleOpenClose(event) {\n	            interceptEvent(event);\n	            this.setState({\n	                open: !this.state.open\n	            });\n	            if (this.state.open) {\n	                return this.setState({\n	                    open: false\n	                });\n	            }\n	\n	            this.handleOpen();\n	        }\n	    }, {\n	        key: 'handleOpen',\n	        value: function handleOpen(event) {\n	            var _this5 = this;\n	\n	            interceptEvent(event);\n	            this.setState({\n	                open: true\n	            }, function () {\n	                _this5.refs.selectArea.focus();\n	            });\n	        }\n	    }, {\n	        key: 'handleClose',\n	        value: function handleClose(event) {\n	            interceptEvent(event);\n	            if (!this.clickingOption) {\n	                this.setState({\n	                    open: false,\n	                    focusedIndex: -1\n	                });\n	            }\n	            this.handleCancel();\n	        }\n	    }, {\n	        key: 'handleFocus',\n	        value: function handleFocus() {\n	            clearTimeout(this.blurTimeout);\n	        }\n	    }, {\n	        key: 'handleBlur',\n	        value: function handleBlur() {\n	            clearTimeout(this.blurTimeout);\n	            this.blurTimeout = setTimeout(this.handleClose.bind(this), 0);\n	        }\n	    }, {\n	        key: 'handleMouseDown',\n	        value: function handleMouseDown() {\n	            this.clickingOption = true;\n	        }\n	    }, {\n	        key: 'handleSelect',\n	        value: function handleSelect(item, event) {\n	            var _this6 = this;\n	\n	            var pendingValue = this.state.pendingValue;\n	            if (!event.target.className.includes('react-multi-select-box-option-selected')) {\n	                this.setState({\n	                    pendingValue: [].concat(_toConsumableArray(pendingValue), [item])\n	                });\n	            } else {\n	                (function () {\n	                    var index = _this6.getPendingValueIndex(item.id);\n	                    setTimeout(function () {\n	                        if (index >= 0) {\n	                            _this6.setState({\n	                                pendingValue: [].concat(_toConsumableArray(pendingValue.slice(0, index)), _toConsumableArray(pendingValue.slice(index + 1)))\n	                            });\n	                        }\n	                    }, 10);\n	                })();\n	            }\n	        }\n	    }, {\n	        key: 'handleSelectedOptionClick',\n	        value: function handleSelectedOptionClick(index, event) {\n	            var pendingValue = this.state.pendingValue;\n	            this.setState({\n	                pendingValue: [].concat(_toConsumableArray(pendingValue.slice(0, index)), _toConsumableArray(pendingValue.slice(index + 1)))\n	            });\n	        }\n	    }, {\n	        key: 'handleToggleOption',\n	        value: function handleToggleOption(key, index, loaded, event) {\n	            var _this7 = this;\n	\n	            var iconDOM = event.currentTarget.firstChild;\n	            var ulDOM = event.currentTarget.parentNode.lastChild;\n	            if (!this.props.async || loaded) {\n	                iconDOM.setAttribute('class', toggleClass(iconDOM.getAttribute('class'), 'expand'));\n	                ulDOM.setAttribute('class', toggleClass(ulDOM.getAttribute('class'), 'react-multi-select-hide'));\n	            } else {\n	                this.props.asyncFetch(key).then(function (items) {\n	                    _this7.setState({\n	                        options: _this7.setOption(_this7.state.options, items, index)\n	                    });\n	                    iconDOM.setAttribute('class', toggleClass(iconDOM.getAttribute('class'), 'expand'));\n	                    ulDOM.setAttribute('class', toggleClass(ulDOM.getAttribute('class'), 'react-multi-select-hide'));\n	                });\n	            }\n	        }\n	    }, {\n	        key: 'setOption',\n	        value: function setOption(options, items, index) {\n	            var keys = index.split('-');\n	            var tmp = options;\n	            var _iteratorNormalCompletion3 = true;\n	            var _didIteratorError3 = false;\n	            var _iteratorError3 = undefined;\n	\n	            try {\n	                for (var _iterator3 = keys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n	                    var i = _step3.value;\n	\n	                    i = +i;\n	                    if (!tmp[i]['sub']) {\n	                        tmp[i]['sub'] = [];\n	                    }\n	                    tmp = tmp[i]['sub'];\n	                }\n	            } catch (err) {\n	                _didIteratorError3 = true;\n	                _iteratorError3 = err;\n	            } finally {\n	                try {\n	                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n	                        _iterator3.return();\n	                    }\n	                } finally {\n	                    if (_didIteratorError3) {\n	                        throw _iteratorError3;\n	                    }\n	                }\n	            }\n	\n	            Array.prototype.push.apply(tmp, items);\n	            return options;\n	        }\n	    }, {\n	        key: 'renderButton',\n	        value: function renderButton() {\n	            var label = this.label();\n	            var title = this.hasValue() ? label : '';\n	            return _react2.default.createElement(\n	                'button',\n	                { className: 'react-multi-select-box', ref: 'button', tabIndex: '0', onClick: this.toggleOpenClose.bind(this) },\n	                _react2.default.createElement(\n	                    'div',\n	                    { className: 'react-multi-select-box-label', title: title },\n	                    label\n	                )\n	            );\n	        }\n	    }, {\n	        key: 'renderOption',\n	        value: function renderOption(item, index, key) {\n	            if (item.hasOwnProperty('subLen') || item.hasOwnProperty('sub')) {\n	                return this.renderClassification(item, index, key);\n	            } else {\n	                return this.renderRow(item);\n	            }\n	        }\n	    }, {\n	        key: 'renderClassification',\n	        value: function renderClassification(item, index, key) {\n	            var _this8 = this;\n	\n	            var loaded = item.hasOwnProperty('sub') && item.sub.length == item.subLen ? true : false;\n	            if (key === '') {\n	                key = item.id;\n	            } else {\n	                key += '-' + item.id;\n	            }\n	            return _react2.default.createElement(\n	                'li',\n	                { key: key, className: 'react-multi-select-classification' },\n	                _react2.default.createElement(\n	                    'div',\n	                    { className: 'classification', onClick: this.handleToggleOption.bind(this, key, index, loaded), loaded: loaded },\n	                    _react2.default.createElement('i', { className: 'react-multi-select-list-arrow' }),\n	                    _react2.default.createElement(\n	                        'span',\n	                        null,\n	                        item.text + '(' + (item.subLen ? item.subLen : item.sub ? item.sub.length : 0) + ')'\n	                    )\n	                ),\n	                _react2.default.createElement(\n	                    'ul',\n	                    { key: 'sub' + item.id, className: 'react-multi-select-sub-options react-multi-select-hide' },\n	                    loaded && item.sub.map(function (sub, i) {\n	                        return _this8.renderOption(sub, index + '-' + i, key);\n	                    })\n	                )\n	            );\n	        }\n	    }, {\n	        key: 'renderRow',\n	        value: function renderRow(item) {\n	            var className = 'react-multi-select-box-option';\n	            if (this.isInclude(this.state.pendingValue, item.id)) {\n	                className += ' react-multi-select-box-option-selected';\n	            }\n	            return _react2.default.createElement(\n	                'li',\n	                { key: item.id, className: 'react-multi-select-list-option' },\n	                _react2.default.createElement(\n	                    'div',\n	                    { className: className, value: item.id, label: item.text, onClick: this.handleSelect.bind(this, item) },\n	                    item.text\n	                )\n	            );\n	        }\n	    }, {\n	        key: 'renderSelectOption',\n	        value: function renderSelectOption() {\n	            var _this9 = this;\n	\n	            return _react2.default.createElement(\n	                'ul',\n	                { className: 'react-multi-select-col' },\n	                this.state.options.map(function (item, index) {\n	                    return _this9.renderOption(item, index + '', '');\n	                })\n	            );\n	        }\n	    }, {\n	        key: 'renderSelectedOption',\n	        value: function renderSelectedOption(item, index) {\n	            return _react2.default.createElement(\n	                'li',\n	                { key: item.id, className: 'selected-option-row', onClick: this.handleSelectedOptionClick.bind(this, index) },\n	                item.text\n	            );\n	        }\n	    }, {\n	        key: 'renderSelectedValue',\n	        value: function renderSelectedValue() {\n	            var _this10 = this;\n	\n	            return _react2.default.createElement(\n	                'div',\n	                { className: 'react-multi-select-col' },\n	                _react2.default.createElement(\n	                    'div',\n	                    { className: 'react-multiple-select-type-name' },\n	                    this.props.selectedLabel + this.props.nameText,\n	                    '：'\n	                ),\n	                _react2.default.createElement(\n	                    'ul',\n	                    null,\n	                    this.state.pendingValue.map(function (item, index) {\n	                        return _this10.renderSelectedOption(item, index);\n	                    })\n	                )\n	            );\n	        }\n	    }, {\n	        key: 'renderSelectOptBtn',\n	        value: function renderSelectOptBtn() {\n	            return _react2.default.createElement(\n	                'div',\n	                { className: 'react-multi-select-area-btn' },\n	                _react2.default.createElement(\n	                    'button',\n	                    { className: 'react-multi-select-btn', onClick: this.handleConfirm.bind(this) },\n	                    this.props.confirmText\n	                ),\n	                _react2.default.createElement(\n	                    'button',\n	                    { className: 'react-multi-select-btn react-multi-select-btn-white', onClick: this.handleCancel.bind(this) },\n	                    this.props.cancelText\n	                )\n	            );\n	        }\n	    }, {\n	        key: 'renderSelectArea',\n	        value: function renderSelectArea() {\n	            var className = 'react-multi-select-area';\n	            if (!this.state.open) {\n	                className += ' react-multi-select-box-hidden';\n	            }\n	            return _react2.default.createElement(\n	                'div',\n	                { className: className, ref: 'selectArea', ariaHidden: true, tabIndex: '0', onBlur: this.handleBlur.bind(this), onFocus: this.handleFocus.bind(this) },\n	                _react2.default.createElement(\n	                    'div',\n	                    { className: 'react-multi-select-panel', tabIndex: '-1' },\n	                    this.renderSelectOption(),\n	                    _react2.default.createElement(\n	                        'div',\n	                        { className: 'react-multi-select-sign' },\n	                        _react2.default.createElement('i', null)\n	                    ),\n	                    this.renderSelectedValue()\n	                ),\n	                this.renderSelectOptBtn()\n	            );\n	        }\n	    }, {\n	        key: 'render',\n	        value: function render() {\n	            var className = 'react-multi-select-box-container';\n	            if (this.props.className) {\n	                className += ' ' + this.props.className;\n	            }\n	            if (!this.hasValue()) {\n	                className += ' react-multi-select-box-empty';\n	            }\n	            return _react2.default.createElement(\n	                'div',\n	                { className: className, id: this.state.id },\n	                this.renderButton(),\n	                this.renderSelectArea()\n	            );\n	        }\n	    }]);\n	\n	    return MultipleSelectBox;\n	}(_react.Component);\n	\n	MultipleSelectBox.defaultProps = {\n	    label: 'Choose ...',\n	    closeText: 'close',\n	    clearText: 'clear',\n	    confirmText: 'ok',\n	    cancelText: 'cancel',\n	    selectedLabel: 'selected',\n	    nameText: '',\n	    value: [],\n	    options: [],\n	    async: false,\n	    onConfirmCallback: function onConfirmCallback() {},\n	    onCancelCallback: function onCancelCallback() {}\n	};\n	exports.default = MultipleSelectBox;\n	;\n	\n	MultipleSelectBox.propTypes = {};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n	module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=react-multiple-select-box.js.map//# sourceMappingURL=data:application/json;base64,");
},function(module,exports){eval('"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nvar career = exports.career = [{\n    "id": 0,\n    "text": "工程师"\n}, {\n    "id": 1,\n    "text": "学生"\n}, {\n    "id": 2,\n    "text": "白领"\n}];\n\nvar city = exports.city = [{\n    "id": 3,\n    "text": "浙江",\n    "subLen": 2,\n    "sub": [{\n        "id": 4,\n        "text": "杭州"\n    }, {\n        "id": 5,\n        "text": "宁波"\n    }]\n}, {\n    "id": 1,\n    "text": "上海",\n    "sub": [{\n        "id": 1,\n        "text": "上海"\n    }]\n}];\n\nvar region = exports.region = [{\n    "id": 3,\n    "text": "浙江",\n    "subLen": 2,\n    "sub": [{\n        "id": 4,\n        "text": "杭州",\n        "subLen": 2\n    }, {\n        "id": 5,\n        "text": "宁波",\n        "subLen": 1,\n        "sub": [{\n            "id": 51,\n            "text": "银座"\n        }]\n    }]\n}, {\n    "id": 10,\n    "text": "江苏",\n    "subLen": 1,\n    "sub": [{\n        "id": 101,\n        "text": "南京",\n        "subLen": 2,\n        "sub": [{\n            "id": 1011,\n            "text": "南京东路"\n        }, {\n            "id": 1012,\n            "text": "人民广场"\n        }]\n    }]\n}];//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29uZmlncy5qcz80YTM5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBTSwwQkFBUyxDQUFDO0FBQ25CLFVBQU0sQ0FEYTtBQUVuQixZQUFRO0FBRlcsQ0FBRCxFQUduQjtBQUNDLFVBQU0sQ0FEUDtBQUVDLFlBQVE7QUFGVCxDQUhtQixFQU1uQjtBQUNDLFVBQU0sQ0FEUDtBQUVDLFlBQVE7QUFGVCxDQU5tQixDQUFmOztBQVlBLElBQU0sc0JBQU8sQ0FBQztBQUNqQixVQUFNLENBRFc7QUFFakIsWUFBUSxJQUZTO0FBR2pCLGNBQVUsQ0FITztBQUlqQixXQUFPLENBQUM7QUFDSixjQUFNLENBREY7QUFFSixnQkFBUTtBQUZKLEtBQUQsRUFHSjtBQUNDLGNBQU0sQ0FEUDtBQUVDLGdCQUFRO0FBRlQsS0FISTtBQUpVLENBQUQsRUFXakI7QUFDQyxVQUFNLENBRFA7QUFFQyxZQUFRLElBRlQ7QUFHQyxXQUFPLENBQUM7QUFDSixjQUFNLENBREY7QUFFSixnQkFBUTtBQUZKLEtBQUQ7QUFIUixDQVhpQixDQUFiOztBQW9CQSxJQUFNLDBCQUFTLENBQUM7QUFDbkIsVUFBTSxDQURhO0FBRW5CLFlBQVEsSUFGVztBQUduQixjQUFVLENBSFM7QUFJbkIsV0FBTyxDQUFDO0FBQ0osY0FBTSxDQURGO0FBRUosZ0JBQVEsSUFGSjtBQUdKLGtCQUFVO0FBSE4sS0FBRCxFQUlKO0FBQ0MsY0FBTSxDQURQO0FBRUMsZ0JBQVEsSUFGVDtBQUdDLGtCQUFVLENBSFg7QUFJQyxlQUFPLENBQUM7QUFDSixrQkFBTSxFQURGO0FBRUosb0JBQVE7QUFGSixTQUFEO0FBSlIsS0FKSTtBQUpZLENBQUQsRUFpQm5CO0FBQ0MsVUFBTSxFQURQO0FBRUMsWUFBUSxJQUZUO0FBR0MsY0FBVSxDQUhYO0FBSUMsV0FBTyxDQUFDO0FBQ0osY0FBTSxHQURGO0FBRUosZ0JBQVEsSUFGSjtBQUdKLGtCQUFVLENBSE47QUFJSixlQUFPLENBQUM7QUFDSixrQkFBTSxJQURGO0FBRUosb0JBQVE7QUFGSixTQUFELEVBR0o7QUFDQyxrQkFBTSxJQURQO0FBRUMsb0JBQVE7QUFGVCxTQUhJO0FBSkgsS0FBRDtBQUpSLENBakJtQixDQUFmIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY2FyZWVyID0gW3tcbiAgICBcImlkXCI6IDAsXG4gICAgXCJ0ZXh0XCI6IFwi5bel56iL5biIXCJcbn0sIHtcbiAgICBcImlkXCI6IDEsXG4gICAgXCJ0ZXh0XCI6IFwi5a2m55SfXCJcbn0sIHtcbiAgICBcImlkXCI6IDIsXG4gICAgXCJ0ZXh0XCI6IFwi55m96aKGXCJcbn1dO1xuXG5cbmV4cG9ydCBjb25zdCBjaXR5ID0gW3tcbiAgICBcImlkXCI6IDMsXG4gICAgXCJ0ZXh0XCI6IFwi5rWZ5rGfXCIsXG4gICAgXCJzdWJMZW5cIjogMixcbiAgICBcInN1YlwiOiBbe1xuICAgICAgICBcImlkXCI6IDQsXG4gICAgICAgIFwidGV4dFwiOiBcIuadreW3nlwiXG4gICAgfSwge1xuICAgICAgICBcImlkXCI6IDUsXG4gICAgICAgIFwidGV4dFwiOiBcIuWugeazolwiXG4gICAgfV1cbn0sIHtcbiAgICBcImlkXCI6IDEsXG4gICAgXCJ0ZXh0XCI6IFwi5LiK5rW3XCIsXG4gICAgXCJzdWJcIjogW3tcbiAgICAgICAgXCJpZFwiOiAxLFxuICAgICAgICBcInRleHRcIjogXCLkuIrmtbdcIlxuICAgIH1dXG59XTtcblxuZXhwb3J0IGNvbnN0IHJlZ2lvbiA9IFt7XG4gICAgXCJpZFwiOiAzLFxuICAgIFwidGV4dFwiOiBcIua1meaxn1wiLFxuICAgIFwic3ViTGVuXCI6IDIsXG4gICAgXCJzdWJcIjogW3tcbiAgICAgICAgXCJpZFwiOiA0LFxuICAgICAgICBcInRleHRcIjogXCLmna3lt55cIixcbiAgICAgICAgXCJzdWJMZW5cIjogMlxuICAgIH0sIHtcbiAgICAgICAgXCJpZFwiOiA1LFxuICAgICAgICBcInRleHRcIjogXCLlroHms6JcIixcbiAgICAgICAgXCJzdWJMZW5cIjogMSxcbiAgICAgICAgXCJzdWJcIjogW3tcbiAgICAgICAgICAgIFwiaWRcIjogNTEsXG4gICAgICAgICAgICBcInRleHRcIjogXCLpk7bluqdcIlxuICAgICAgICB9XVxuICAgIH1dXG59LCB7XG4gICAgXCJpZFwiOiAxMCxcbiAgICBcInRleHRcIjogXCLmsZ/oi49cIixcbiAgICBcInN1YkxlblwiOiAxLFxuICAgIFwic3ViXCI6IFt7XG4gICAgICAgIFwiaWRcIjogMTAxLFxuICAgICAgICBcInRleHRcIjogXCLljZfkuqxcIixcbiAgICAgICAgXCJzdWJMZW5cIjogMixcbiAgICAgICAgXCJzdWJcIjogW3tcbiAgICAgICAgICAgIFwiaWRcIjogMTAxMSxcbiAgICAgICAgICAgIFwidGV4dFwiOiBcIuWNl+S6rOS4nOi3r1wiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIFwiaWRcIjogMTAxMixcbiAgICAgICAgICAgIFwidGV4dFwiOiBcIuS6uuawkeW5v+WculwiXG4gICAgICAgIH1dXG4gICAgfV1cbn1dO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2NvbmZpZ3MuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY3NzL21haW4uc2Nzcz9jNzAxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9hcHAvY3NzL21haW4uc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},,,,function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY3NzL211bHRpcGxlLXNlbGVjdC1ib3guc2Nzcz80MTZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjEyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vYXBwL2Nzcy9tdWx0aXBsZS1zZWxlY3QtYm94LnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")}]);